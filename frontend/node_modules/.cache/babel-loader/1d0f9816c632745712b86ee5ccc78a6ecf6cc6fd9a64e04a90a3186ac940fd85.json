{"ast":null,"code":"import { BaseSource } from \"../BaseSource.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.AudioSource}\n * @description Defines how to manipulate a Subtitles layer\n */\nclass AudioSource extends BaseSource {\n  constructor(publicId) {\n    super();\n    this._qualifierModel = {\n      sourceType: 'audio',\n      publicId\n    };\n  }\n  /**\n   * @description\n   * Returns the opening string of the layer,\n   * This method is used internally within {@link SDK.LayerAction|LayerAction}\n   * @returns {string}\n   */\n  getOpenSourceString(layerType) {\n    const encodedPublicID = this.encodeAssetPublicID(this._qualifierModel.publicId);\n    return \"\".concat(layerType, \"_audio:\").concat(encodedPublicID);\n  }\n  static fromJson(qualifierModel, transformationFromJson) {\n    const {\n      publicId,\n      transformation\n    } = qualifierModel;\n    // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [qualifierModel])\n    // This allows the inheriting classes to determine the class to be created\n    // @ts-ignore\n    const result = new this(publicId);\n    if (transformation) {\n      result.transformation(transformationFromJson(transformation));\n    }\n    return result;\n  }\n}\nexport { AudioSource };","map":{"version":3,"names":["BaseSource","AudioSource","constructor","publicId","_qualifierModel","sourceType","getOpenSourceString","layerType","encodedPublicID","encodeAssetPublicID","concat","fromJson","qualifierModel","transformationFromJson","transformation","result"],"sources":["C:/Users/lcyke/OneDrive/Masaüstü/NereyeApp/frontend/node_modules/@cloudinary/transformation-builder-sdk/qualifiers/source/sourceTypes/AudioSource.js"],"sourcesContent":["import { BaseSource } from \"../BaseSource.js\";\n/**\n * @memberOf Qualifiers.Source\n * @extends {Qualifiers.Source.AudioSource}\n * @description Defines how to manipulate a Subtitles layer\n */\nclass AudioSource extends BaseSource {\n    constructor(publicId) {\n        super();\n        this._qualifierModel = {\n            sourceType: 'audio',\n            publicId\n        };\n    }\n    /**\n     * @description\n     * Returns the opening string of the layer,\n     * This method is used internally within {@link SDK.LayerAction|LayerAction}\n     * @returns {string}\n     */\n    getOpenSourceString(layerType) {\n        const encodedPublicID = this.encodeAssetPublicID(this._qualifierModel.publicId);\n        return `${layerType}_audio:${encodedPublicID}`;\n    }\n    static fromJson(qualifierModel, transformationFromJson) {\n        const { publicId, transformation } = qualifierModel;\n        // We are using this() to allow inheriting classes to use super.fromJson.apply(this, [qualifierModel])\n        // This allows the inheriting classes to determine the class to be created\n        // @ts-ignore\n        const result = new this(publicId);\n        if (transformation) {\n            result.transformation(transformationFromJson(transformation));\n        }\n        return result;\n    }\n}\nexport { AudioSource };\n"],"mappings":"AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASD,UAAU,CAAC;EACjCE,WAAWA,CAACC,QAAQ,EAAE;IAClB,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,eAAe,GAAG;MACnBC,UAAU,EAAE,OAAO;MACnBF;IACJ,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;AACA;EACIG,mBAAmBA,CAACC,SAAS,EAAE;IAC3B,MAAMC,eAAe,GAAG,IAAI,CAACC,mBAAmB,CAAC,IAAI,CAACL,eAAe,CAACD,QAAQ,CAAC;IAC/E,UAAAO,MAAA,CAAUH,SAAS,aAAAG,MAAA,CAAUF,eAAe;EAChD;EACA,OAAOG,QAAQA,CAACC,cAAc,EAAEC,sBAAsB,EAAE;IACpD,MAAM;MAAEV,QAAQ;MAAEW;IAAe,CAAC,GAAGF,cAAc;IACnD;IACA;IACA;IACA,MAAMG,MAAM,GAAG,IAAI,IAAI,CAACZ,QAAQ,CAAC;IACjC,IAAIW,cAAc,EAAE;MAChBC,MAAM,CAACD,cAAc,CAACD,sBAAsB,CAACC,cAAc,CAAC,CAAC;IACjE;IACA,OAAOC,MAAM;EACjB;AACJ;AACA,SAASd,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}