{"ast":null,"code":"import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\n * @extends SDK.Action\n * @memberOf {Actions.Effect}\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ThemeEffect extends Action {\n  constructor(color) {\n    super();\n    this.effectName = 'theme';\n    this.color = color;\n  }\n  /**\n   * @description The sensitivity to photographic elements of an image.\n   *              A value of 0 treats the whole image as non-photographic.\n   *              A value of 200 treats the whole image as photographic, so no theme change is applied.\n   * @param {number} photosensitivity\n   * @return {this}\n   */\n  photosensitivity(photosensitivity) {\n    this._photosensitivity = photosensitivity;\n    return this;\n  }\n  prepareQualifiers() {\n    const sensitivity = this._photosensitivity ? \":photosensitivity_\".concat(this._photosensitivity) : '';\n    // Replace # in hex colors (#fff -> fff)\n    const val = \"\".concat(this.effectName, \":color_\").concat(this.color.replace('#', '')).concat(sensitivity);\n    this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n    return;\n  }\n}\nexport { ThemeEffect };","map":{"version":3,"names":["Qualifier","QualifierValue","Action","ThemeEffect","constructor","color","effectName","photosensitivity","_photosensitivity","prepareQualifiers","sensitivity","concat","val","replace","addQualifier"],"sources":["C:/Users/lcyke/OneDrive/Masaüstü/NereyeApp/frontend/node_modules/@cloudinary/transformation-builder-sdk/actions/effect/Theme.js"],"sourcesContent":["import { Qualifier } from \"../../internal/qualifier/Qualifier.js\";\nimport { QualifierValue } from \"../../internal/qualifier/QualifierValue.js\";\nimport { Action } from \"../../internal/Action.js\";\n/**\n * @description Changes the main background color to the one specified, as if a 'theme change' was applied (e.g. dark mode vs light mode).\n * @extends SDK.Action\n * @memberOf {Actions.Effect}\n * @see Visit {@link Actions.Effect|Effect} for an example\n */\nclass ThemeEffect extends Action {\n    constructor(color) {\n        super();\n        this.effectName = 'theme';\n        this.color = color;\n    }\n    /**\n     * @description The sensitivity to photographic elements of an image.\n     *              A value of 0 treats the whole image as non-photographic.\n     *              A value of 200 treats the whole image as photographic, so no theme change is applied.\n     * @param {number} photosensitivity\n     * @return {this}\n     */\n    photosensitivity(photosensitivity) {\n        this._photosensitivity = photosensitivity;\n        return this;\n    }\n    prepareQualifiers() {\n        const sensitivity = this._photosensitivity ? `:photosensitivity_${this._photosensitivity}` : '';\n        // Replace # in hex colors (#fff -> fff)\n        const val = `${this.effectName}:color_${this.color.replace('#', '')}${sensitivity}`;\n        this.addQualifier(new Qualifier('e', new QualifierValue(val)));\n        return;\n    }\n}\nexport { ThemeEffect };\n"],"mappings":"AAAA,SAASA,SAAS,QAAQ,uCAAuC;AACjE,SAASC,cAAc,QAAQ,4CAA4C;AAC3E,SAASC,MAAM,QAAQ,0BAA0B;AACjD;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,WAAW,SAASD,MAAM,CAAC;EAC7BE,WAAWA,CAACC,KAAK,EAAE;IACf,KAAK,CAAC,CAAC;IACP,IAAI,CAACC,UAAU,GAAG,OAAO;IACzB,IAAI,CAACD,KAAK,GAAGA,KAAK;EACtB;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACIE,gBAAgBA,CAACA,gBAAgB,EAAE;IAC/B,IAAI,CAACC,iBAAiB,GAAGD,gBAAgB;IACzC,OAAO,IAAI;EACf;EACAE,iBAAiBA,CAAA,EAAG;IAChB,MAAMC,WAAW,GAAG,IAAI,CAACF,iBAAiB,wBAAAG,MAAA,CAAwB,IAAI,CAACH,iBAAiB,IAAK,EAAE;IAC/F;IACA,MAAMI,GAAG,MAAAD,MAAA,CAAM,IAAI,CAACL,UAAU,aAAAK,MAAA,CAAU,IAAI,CAACN,KAAK,CAACQ,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,EAAAF,MAAA,CAAGD,WAAW,CAAE;IACnF,IAAI,CAACI,YAAY,CAAC,IAAId,SAAS,CAAC,GAAG,EAAE,IAAIC,cAAc,CAACW,GAAG,CAAC,CAAC,CAAC;IAC9D;EACJ;AACJ;AACA,SAAST,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}